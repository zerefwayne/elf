version: '3'
services:
  elf-server:
    build: .
    restart: on-failure
    environment:
      - DB_HOST=${PG_HOST}
      - DB_PORT=${PG_PORT}
      - DB_USER=${PG_USER}
      - DB_PASSWORD=${PG_PASSWORD}
      - DB_NAME=${PG_DB}
    volumes:
      - api:/usr/src/app/
    expose:
      - '5000'
    depends_on:
      - elf-db
    networks:
      - elf-backend

  elf-frontend:
    build: ./web-client
    restart: on-failure
    depends_on:
      - elf-server
    networks:
      - elf-backend
    expose:
      - '80'
    ports:
      - '8080:80'

  elf-db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
      - DATABASE_HOST=${PG_HOST}
    ports:
      - '5432:5432'
    volumes:
      - database_postgres:/var/lib/postgresql/data
    networks:
      - elf-backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - elf-backend
    depends_on:
      - elf-server
      - elf-frontend
    ports:
      - "4000:4000"

volumes:
  api:
  database_postgres:

networks:
  elf-backend:
    driver: bridge
